<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="cn.uestc.note.dao.NotebookDao">
	<!--1.这里用了别名，为了让表中的字段名称和entity中的对象中的属性名称以及顺序保持一致
		2.本质上，查询结果不论返回结果集还是一条记录，都是用map封装，一条用一个map，多条用
			map集合。就算返回结果是对象类型，也是先放在map中，再放在对象中。
	-->
	<select id="findNotebooksByUserId"
		parameterType="string"
		resultType="map">
		select
			cn_notebook_name as name,
			cn_notebook_id as id
		from
			cn_notebook
		where
			cn_user_id = #{userId}
		order by
			cn_notebook_createtime desc
	</select>
	<insert id="addNotebook"
		parameterType="cn.uestc.note.entity.Notebook">
		insert into cn_notebook(
			cn_notebook_id,
			cn_user_id,
			cn_notebook_type_id,
			cn_notebook_name,
			cn_notebook_desc,
			cn_notebook_createtime
		)VALUES (
			#{id},#{userId},#{type},#{name},#{thedesc},#{createtime}
		)


	</insert>

	<delete id="deleteNotebook"
		parameterType="string"
	>
		DELETE
		FROM cn_notebook
		WHERE cn_notebook_id=#{id}
	</delete>

	<select id="findNotebookById"
			parameterType="string"
			resultType="cn.uestc.note.entity.Notebook"
	>
		SELECT
			cn_notebook_id as id,
			cn_user_id as userId,
			cn_notebook_name as name,
			cn_notebook_type_id as type,
			cn_notebook_desc AS thedesc,
			cn_notebook_createtime as createtime
		FROM
			cn_notebook
		where
			cn_notebook_id=#{notebookId}
	</select>


	<!--结合之前所学的动态sql用法实现分页查询-->
	<select id="findNotebooksByPage"
			resultType="map">
		select
		cn_notebook_name as name,
		cn_notebook_id as id
		from
		${table}
		where
		cn_user_id = #{userId}
		order by
		cn_notebook_createtime desc
		LIMIT #{start},#{pageSize}
	</select>


</mapper>







